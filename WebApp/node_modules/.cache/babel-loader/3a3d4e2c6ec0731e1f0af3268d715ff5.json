{"ast":null,"code":"var _jsxFileName = \"/home/asitha/Documents/Mobile Apps/elly/WebApp/test/elly-admin/src/components/leftDrawer/LeftDrawer.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nconst drawerWidth = 300;\nexport default class LeftDrawer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        openDrawer: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        openDrawer: false\n      });\n    };\n\n    this.state = {\n      openDrawer: true\n    };\n  }\n\n  render() {\n    console.log(drawerWidth);\n    const useStyles = makeStyles(theme => ({\n      root: {\n        display: 'flex'\n      },\n      appBar: {\n        width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n        marginLeft: drawerWidth\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0\n      },\n      drawerPaper: {\n        width: drawerWidth\n      },\n      toolbar: theme.mixins.toolbar,\n      content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing(3)\n      }\n    }));\n    return React.createElement(Drawer, {\n      className: useStyles.drawer,\n      variant: \"permanent\",\n      classes: {\n        paper: useStyles.drawerPaper\n      },\n      anchor: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: useStyles.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : React.createElement(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/asitha/Documents/Mobile Apps/elly/WebApp/test/elly-admin/src/components/leftDrawer/LeftDrawer.js"],"names":["React","makeStyles","Drawer","List","Divider","IconButton","ChevronLeftIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","drawerWidth","LeftDrawer","Component","constructor","props","handleDrawerOpen","setState","openDrawer","handleDrawerClose","state","render","console","log","useStyles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","padding","spacing","paper","map","text","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst drawerWidth = 300;\n\nexport default class LeftDrawer extends React.Component {\n  \n  constructor(props){\n    super(props)\n    this.state={\n      openDrawer: true\n    }\n  }\n  handleDrawerOpen = () => {\n    this.setState({\n      openDrawer: true\n    })\n  };\n\n  handleDrawerClose = () => {\n    this.setState({\n      openDrawer: false\n    })\n  };\n\n  render(){\n    console.log(drawerWidth)\n    const useStyles = makeStyles(theme => ({\n      root: {\n        display: 'flex',\n      },\n      appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n      drawerPaper: {\n        width: drawerWidth,\n      },\n      toolbar: theme.mixins.toolbar,\n      content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing(3),\n      },\n    }));\n  return (\n    <Drawer\n        className={useStyles.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: useStyles.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={useStyles.toolbar} />\n        <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n  )\n    }\n  }"]},"metadata":{},"sourceType":"module"}