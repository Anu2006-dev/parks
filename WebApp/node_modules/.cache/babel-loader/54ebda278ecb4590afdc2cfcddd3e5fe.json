{"ast":null,"code":"import _slicedToArray from \"/home/asitha/Documents/Mobile Apps/elly/WebApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/asitha/Documents/Mobile Apps/elly/WebApp/src/components/ReviewCard/ReviewCard.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport { red } from '@material-ui/core/colors';\nimport ObservationDialog from '../ObservationDialog/ObservationDialog';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 300,\n    margin: 10\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    // 16:9\n    width: 300\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nexport default function ReviewCard(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(emails[1]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedValue = _React$useState4[0],\n        setSelectedValue = _React$useState4[1];\n\n  const handleClickOpen = id => {\n    setOpen(true);\n    console.log(props);\n    props.parentCallback([true, id]);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      \"aria-label\": \"recipe\",\n      className: classes.avatar,\n      src: props.userPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }) // action={\n    //   <IconButton aria-label=\"settings\">\n    //     <MoreVertIcon />\n    //   </IconButton>\n    // }\n    ,\n    title: props.user,\n    subheader: props.time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(CardMedia, {\n    className: classes.media,\n    image: props.obPhoto,\n    title: props.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => handleClickOpen(props.id),\n    variant: \"outlined\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"View\")), React.createElement(CardActions, {\n    disableSpacing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(ObservationDialog, {\n    userPhoto: props.userPhoto,\n    user: props.user,\n    time: props.time,\n    verified: props.verified,\n    userId: props.userId,\n    id: props.id,\n    img: props.obPhoto,\n    result: props.result,\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/asitha/Documents/Mobile Apps/elly/WebApp/src/components/ReviewCard/ReviewCard.js"],"names":["React","makeStyles","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Button","red","ObservationDialog","useStyles","theme","card","maxWidth","margin","media","height","paddingTop","width","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","emails","ReviewCard","props","classes","useState","open","setOpen","selectedValue","setSelectedValue","handleClickOpen","id","console","log","parentCallback","handleClose","value","userPhoto","user","time","obPhoto","verified","userId","result"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport { red } from '@material-ui/core/colors';\nimport ObservationDialog from '../ObservationDialog/ObservationDialog'\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 300,\n    margin: 10\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n    width: 300\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nexport default function ReviewCard(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n  \n  const handleClickOpen = id => {\n    setOpen(true);\n    console.log(props)\n    props.parentCallback([true, id])\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n    \n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar} src={props.userPhoto}/>\n        }\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        title={props.user}\n        subheader={props.time}\n      />\n      <CardMedia\n        className={classes.media}\n        image={props.obPhoto}\n        title={props.user}\n      />\n      <CardContent>\n        <Button onClick={()=>handleClickOpen(props.id)} variant=\"outlined\" color=\"primary\">View</Button>\n      </CardContent>\n      <CardActions disableSpacing>\n      </CardActions>\n      <ObservationDialog userPhoto={props.userPhoto} user={props.user} time={props.time} verified={props.verified} userId={props.userId} id={props.id} img={props.obPhoto} result={props.result} selectedValue={selectedValue} open={open} onClose={handleClose} />\n    </Card>\n  );\n}"]},"metadata":{},"sourceType":"module"}