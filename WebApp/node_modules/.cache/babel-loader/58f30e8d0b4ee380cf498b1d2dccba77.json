{"ast":null,"code":"var _jsxFileName = \"/home/asitha/Documents/Mobile Apps/elly/WebApp/src/components/ObservationDialog/ObservationDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport InfoRounded from '@material-ui/icons/InfoRounded';\nimport Swal from 'sweetalert2';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport firebase from 'firebase/app';\nexport default function ObservationDialog(props) {\n  const onClose = props.onClose,\n        selectedValue = props.selectedValue,\n        open = props.open;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  const verifyHandler = (id, userId) => {\n    handleClose();\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You can delete accidentaly verified stuff from the approved page!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, verify it!'\n    }).then(result => {\n      if (result.value) {\n        firebase.database().ref().child('users').child(userId).child('observations').child(id).child('verified').set(true);\n        Swal.fire('Verified!', 'Your file has been verified.', 'success');\n      }\n    });\n  };\n\n  const deleteHandler = (id, userId) => {\n    handleClose();\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(result => {\n      if (result.value) {\n        firebase.database().ref().child('users').child(userId).child('observations').child(id).remove();\n        Swal.fire('Deleted!', 'Your file has been deleted.', 'success');\n      }\n    });\n  };\n\n  return React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      height: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      \"aria-label\": \"recipe\",\n      src: props.userPhoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }),\n    title: props.user,\n    subheader: props.time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"img\", {\n    alt: 'scorelab.org',\n    style: {\n      width: 600,\n      height: 400\n    },\n    src: props.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, props.result.map(item => React.createElement(ListItem, {\n    button: true,\n    onClick: () => handleListItemClick(item[1]),\n    key: item[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(InfoRounded, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))), React.createElement(ListItemText, {\n    primary: item[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })))), React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, props.verified ? React.createElement(Button, {\n    style: {\n      margin: 2\n    },\n    variant: \"outlined\",\n    onClick: () => deleteHandler(props.id, props.userId),\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Delete\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      margin: 2\n    },\n    variant: \"outlined\",\n    onClick: () => verifyHandler(props.id, props.userId),\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Verify\"), React.createElement(Button, {\n    style: {\n      margin: 2\n    },\n    variant: \"outlined\",\n    onClick: () => deleteHandler(props.id, props.userId),\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Delete\"))));\n}\nObservationDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/asitha/Documents/Mobile Apps/elly/WebApp/src/components/ObservationDialog/ObservationDialog.js"],"names":["React","PropTypes","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","InfoRounded","Swal","Card","CardHeader","firebase","ObservationDialog","props","onClose","selectedValue","open","handleClose","handleListItemClick","value","verifyHandler","id","userId","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","database","ref","child","set","deleteHandler","remove","height","userPhoto","user","time","width","img","map","item","verified","margin","propTypes","func","isRequired","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport InfoRounded from '@material-ui/icons/InfoRounded';\nimport Swal from 'sweetalert2'\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport firebase from 'firebase/app'\n\nexport default function ObservationDialog(props) {\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  const verifyHandler = (id, userId) => {\n    handleClose()\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You can delete accidentaly verified stuff from the approved page!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, verify it!'\n    }).then((result) => {\n      if (result.value) {\n        firebase.database().ref().child('users').child(userId).child('observations').child(id).child('verified').set(true)\n        Swal.fire(\n          'Verified!',\n          'Your file has been verified.',\n          'success'\n        )\n      }\n    })\n  }\n\n  const deleteHandler = (id, userId) => {\n    handleClose()\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.value) {\n        firebase.database().ref().child('users').child(userId).child('observations').child(id).remove()\n        Swal.fire(\n          'Deleted!',\n          'Your file has been deleted.',\n          'success'\n        )\n      }\n    })\n  }\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <Card style={{height: 100}}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" src={props.userPhoto}/>\n          }\n          title={props.user}\n          subheader={props.time}\n        />\n      </Card>\n      <img alt={'scorelab.org'} style={{width: 600,height: 400}} src={props.img}/> \n        <List>\n            {props.result.map(item => (\n            <ListItem button onClick={() => handleListItemClick(item[1])} key={item[1]}>\n                <ListItemAvatar>\n                  <Avatar>\n                    <InfoRounded/>\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={item[1]} />\n            </ListItem>\n            ))}\n        </List>\n        <DialogTitle id=\"simple-dialog-title\">\n          {props.verified?\n            <Button style={{margin: 2}} variant=\"outlined\" onClick={()=>deleteHandler(props.id, props.userId)} color=\"secondary\">Delete</Button>\n          :\n            <div>\n              <Button style={{margin: 2}} variant=\"outlined\" onClick={()=>verifyHandler(props.id, props.userId)} color=\"primary\">Verify</Button>\n              <Button style={{margin: 2}} variant=\"outlined\" onClick={()=>deleteHandler(props.id, props.userId)} color=\"secondary\">Delete</Button>\n            </div>\n          }\n          \n          \n        </DialogTitle>\n    </Dialog>\n  );\n}\n\nObservationDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};"]},"metadata":{},"sourceType":"module"}