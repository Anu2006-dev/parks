{"ast":null,"code":"var _jsxFileName = \"/home/asitha/Documents/Mobile Apps/elly/WebApp/test/elly-admin/src/components/Dialog/Dialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\n\nvar firebase = require(\"firebase\");\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\nexport default function SimpleDialog(props) {\n  const classes = useStyles();\n  const onClose = props.onClose,\n        selectedValue = props.selectedValue,\n        open = props.open;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  const verifyHandler = (id, userId) => {\n    firebase.database().ref().child('users').child(userId).child('observations').child(id).child('verified').set(true);\n    console.log(id);\n  };\n\n  const deleteHandler = (id, userId) => {\n    console.log(id);\n  };\n\n  return React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Observation\", React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: () => verifyHandler(props.id, props.userId),\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Verify\"), React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: () => deleteHandler(props.id, props.userId),\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Reject\")), React.createElement(\"img\", {\n    alt: 'scorelab.org',\n    style: {\n      height: 300\n    },\n    src: props.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.result.map(item => React.createElement(ListItem, {\n    button: true,\n    onClick: () => handleListItemClick(item[1]),\n    key: item[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"add_circle\"))), React.createElement(ListItemText, {\n    primary: item[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })))));\n}\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/asitha/Documents/Mobile Apps/elly/WebApp/test/elly-admin/src/components/Dialog/Dialog.js"],"names":["React","PropTypes","makeStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","blue","Icon","firebase","require","useStyles","avatar","backgroundColor","color","SimpleDialog","props","classes","onClose","selectedValue","open","handleClose","handleListItemClick","value","verifyHandler","id","userId","database","ref","child","set","console","log","deleteHandler","height","img","result","map","item","propTypes","func","isRequired","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\n\nvar firebase = require(\"firebase\");\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nexport default function SimpleDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  const verifyHandler = (id, userId) => {\n    firebase.database().ref().child('users').child(userId).child('observations').child(id).child('verified').set(true)\n    console.log(id)\n  }\n\n  const deleteHandler = (id, userId) => {\n    console.log(id)\n  }\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Observation\n        <Button variant=\"outlined\" onClick={()=>verifyHandler(props.id, props.userId)} color=\"primary\">Verify</Button>\n        <Button variant=\"outlined\" onClick={()=>deleteHandler(props.id, props.userId)} color=\"secondary\">Reject</Button>\n      </DialogTitle>\n        <img alt={'scorelab.org'} style={{height: 300}} src={props.img}/> \n        <List>\n            {props.result.map(item => (\n            <ListItem button onClick={() => handleListItemClick(item[1])} key={item[1]}>\n                <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                    <Icon color=\"primary\">add_circle</Icon>\n                </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={item[1]} />\n            </ListItem>\n            ))}\n        </List>\n        \n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};"]},"metadata":{},"sourceType":"module"}