{"ast":null,"code":"var _jsxFileName = \"/home/asitha/Documents/Mobile Apps/elly/WebApp/test/elly-admin/src/components/SideBar/SideBar.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  toolbar: theme.mixins.toolbar\n}));\nconst routes = [{\n  path: \"/home/dashboard\",\n  sidebar: () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"bubblegum!\"),\n  main: () => React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Bubblegum\")\n}, {\n  path: \"/home/pending\",\n  sidebar: () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"shoelaces!\"),\n  main: () => React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Shoelaces\")\n}];\nexport const SideBar = () => {\n  const classes = useStyles();\n  return React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, ['dashboard', 'pending'].map((text, index) => React.createElement(ListItem, {\n    Link: \"/home/\" + text,\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, index % 2 === 0 ? React.createElement(InboxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }) : React.createElement(MailIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: text.toUpperCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })))), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, routes.map((route, index) => // You can render a <Route> in as many places\n  // as you want in your app. It will render along\n  // with any other <Route>s that also match the URL.\n  // So, a sidebar or breadcrumbs or anything else\n  // that requires you to render multiple things\n  // in multiple places at the same URL is nothing\n  // more than multiple <Route>s.\n  React.createElement(Route, {\n    key: index,\n    path: route.path,\n    exact: route.exact,\n    children: React.createElement(route.sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/home/asitha/Documents/Mobile Apps/elly/WebApp/test/elly-admin/src/components/SideBar/SideBar.js"],"names":["React","makeStyles","Drawer","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","BrowserRouter","Router","Switch","Route","Link","drawerWidth","useStyles","theme","drawer","width","flexShrink","drawerPaper","toolbar","mixins","routes","path","sidebar","main","SideBar","classes","paper","map","text","index","toUpperCase","route","exact"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n}));\n\nconst routes = [\n  {\n    path: \"/home/dashboard\",\n    sidebar: () => <div>bubblegum!</div>,\n    main: () => <h2>Bubblegum</h2>\n  },\n  {\n    path: \"/home/pending\",\n    sidebar: () => <div>shoelaces!</div>,\n    main: () => <h2>Shoelaces</h2>\n  }\n];\n\nexport const SideBar =()=>{\n  const classes = useStyles();\n  return  <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.toolbar}/>\n              <List>\n                {['dashboard', 'pending'].map((text, index) => (\n                  <ListItem Link={\"/home/\"+text} button key={text}>\n                    <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                    \n                      <ListItemText primary={text.toUpperCase()} />\n                    \n                  </ListItem>\n                ))}\n              </List>\n              <Switch>\n                {routes.map((route, index) => (\n                  // You can render a <Route> in as many places\n                  // as you want in your app. It will render along\n                  // with any other <Route>s that also match the URL.\n                  // So, a sidebar or breadcrumbs or anything else\n                  // that requires you to render multiple things\n                  // in multiple places at the same URL is nothing\n                  // more than multiple <Route>s.\n                  <Route\n                    key={index}\n                    path={route.path}\n                    exact={route.exact}\n                    children={<route.sidebar />}\n                  />\n                ))}\n              </Switch>\n          </Drawer>\n}"]},"metadata":{},"sourceType":"module"}