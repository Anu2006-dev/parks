{"ast":null,"code":"var _jsxFileName = \"/home/asitha/Documents/Mobile Apps/elly/WebApp/test/elly-admin/src/containers/Approved/Approved.js\";\nimport React from 'react';\nimport { generateResult } from '../../firebase/dataHandling';\nimport ReviewCard from '../../components/ReviewCard/ReviewCard';\n\nvar firebase = require(\"firebase\");\n\nclass Approved extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      observations: []\n    };\n  }\n\n  componentDidMount() {\n    firebase.database().ref().child('users').once(\"value\").then(snapshot => {\n      const result = snapshot.val();\n      let observations = [];\n\n      for (let i in result) {\n        let user = result[i].name;\n        let userPhoto = result[i].photo;\n        let userObs = result[i].observations;\n\n        for (let j in userObs) {\n          if (!userObs[j].verified) {\n            continue;\n          } //console.log(userObs[j])\n\n\n          let obPhoto = userObs[j].photoURL;\n          let time = new Date(userObs[j].time);\n          time = time.toString().split(\" \");\n          time = time.splice(0, time.length - 4);\n          time = time.toString().replace(/,/g, ' ');\n          let result = generateResult(userObs[j]);\n          observations.push([user, userPhoto, obPhoto, time, result]);\n          this.setState({\n            observations: observations\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"div\", {\n      style: {\n        display: 'inline-flex',\n        flexWrap: 'wrap'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.observations.map((ob, i) => {\n      return React.createElement(ReviewCard, {\n        user: ob[0],\n        userPhoto: ob[1],\n        obPhoto: ob[2],\n        time: ob[3],\n        result: ob[4],\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\n;\nexport default Approved;","map":{"version":3,"sources":["/home/asitha/Documents/Mobile Apps/elly/WebApp/test/elly-admin/src/containers/Approved/Approved.js"],"names":["React","generateResult","ReviewCard","firebase","require","Approved","Component","constructor","props","state","observations","componentDidMount","database","ref","child","once","then","snapshot","result","val","i","user","name","userPhoto","photo","userObs","j","verified","obPhoto","photoURL","time","Date","toString","split","splice","length","replace","push","setState","render","width","display","flexWrap","map","ob"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {generateResult} from '../../firebase/dataHandling'\nimport ReviewCard from '../../components/ReviewCard/ReviewCard';\nvar firebase = require(\"firebase\");\nclass Approved extends React.Component{\n  constructor(props){\n    super(props)\n    this.state={\n      observations: []\n    }\n  }\n  componentDidMount(){\n    firebase.database().ref().child('users').once(\"value\").then(snapshot => {\n      const result = snapshot.val()\n      let observations = []\n      for(let i in result){\n        let user = result[i].name\n        let userPhoto = result[i].photo\n        let userObs = result[i].observations\n        for(let j in userObs){\n          if(!userObs[j].verified){continue}\n          //console.log(userObs[j])\n          let obPhoto = userObs[j].photoURL\n          let time = new Date(userObs[j].time)\n          time = time.toString().split(\" \")\n          time = time.splice(0, time.length - 4)\n          time = time.toString().replace(/,/g, ' ')\n          let result = generateResult(userObs[j])\n          observations.push([user,userPhoto,obPhoto, time, result])\n          this.setState({observations: observations})\n        }\n      }\n    })\n  }\n  render(){\n    return (\n      <div style={{ width: '100%' }}>\n          <h1>Dashboard</h1>\n          <div style={{ display: 'inline-flex', flexWrap: 'wrap' }}>\n            {this.state.observations.map((ob,i)=>{\n              return <ReviewCard user={ob[0]} userPhoto={ob[1]} obPhoto={ob[2]} time={ob[3]} result={ob[4]}  key={i}/>\n            })}\n          </div>\n          \n      </div>\n    );\n  }\n  \n};\n\nexport default Approved;\n"]},"metadata":{},"sourceType":"module"}