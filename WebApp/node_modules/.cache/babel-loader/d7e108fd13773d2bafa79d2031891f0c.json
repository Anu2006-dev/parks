{"ast":null,"code":"var _jsxFileName = \"/home/asitha/Documents/Mobile Apps/elly/WebApp/test/elly-admin/src/components/Dialog/Dialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\nexport default function SimpleDialog(props) {\n  const classes = useStyles();\n  const open = props.open;\n  return React.createElement(Dialog, {\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Set backup account\"), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, emails.map(email => React.createElement(ListItem, {\n    button: true,\n    key: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(PersonIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))), React.createElement(ListItemText, {\n    primary: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))), React.createElement(ListItem, {\n    autoFocus: true,\n    button: true,\n    onClick: () => handleListItemClick('addAccount'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), React.createElement(ListItemText, {\n    primary: \"add account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))));\n}\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n}; // function SimpleDialogDemo() {\n//   const [open, setOpen] = React.useState(false);\n//   const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleClose = value => {\n//     setOpen(false);\n//     setSelectedValue(value);\n//   };\n//   return (\n//     <div>\n//       <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n//       <br />\n//       <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n//         Open simple dialog\n//       </Button>\n//       <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/home/asitha/Documents/Mobile Apps/elly/WebApp/test/elly-admin/src/components/Dialog/Dialog.js"],"names":["React","PropTypes","makeStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","emails","useStyles","avatar","backgroundColor","color","SimpleDialog","props","classes","open","map","email","handleListItemClick","propTypes","onClose","func","isRequired","bool","selectedValue","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nexport default function SimpleDialog(props) {\n  const classes = useStyles();\n  const { open } = props;\n\n  return (\n    <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {emails.map(email => (\n          <ListItem button key={email}>\n            <ListItemAvatar>\n              <Avatar className={classes.avatar}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\n// function SimpleDialogDemo() {\n//   const [open, setOpen] = React.useState(false);\n//   const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleClose = value => {\n//     setOpen(false);\n//     setSelectedValue(value);\n//   };\n\n//   return (\n//     <div>\n//       <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n//       <br />\n//       <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n//         Open simple dialog\n//       </Button>\n//       <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n//     </div>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}